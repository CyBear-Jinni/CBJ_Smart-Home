syntax = "proto3";

package SmartConnection;

// The greeting service definition.
service SmartServer {
    // Sends a greeting
    rpc GetAllDevices (SmartDeviceStatus) returns (stream SmartDevice) {
    }
    rpc SetFirebaseAccountInformation (FirebaseAccountInformation) returns (CommendStatus) {
    }
    rpc GetStatus (SmartDevice) returns (SmartDeviceStatus) {
    }
    rpc UpdateDeviceName (SmartDeviceUpdateDetails) returns (CommendStatus){
    }
    rpc SetOnDevice (SmartDevice) returns (CommendStatus) {
    }
    rpc SetOffDevice (SmartDevice) returns (CommendStatus) {
    }
    rpc setBlindsUp (SmartDevice) returns (CommendStatus) {
    }
    rpc setBlindsDown (SmartDevice) returns (CommendStatus) {
    }
    rpc setBlindsStop (SmartDevice) returns (CommendStatus) {
    }
}

// The request message containing the user's name.
message SmartDevice {
    string id = 1;
    string type = 2;
    string state = 3;
    string action = 13;
    string defaultName = 14;
    string roomId = 15;
    string senderDeviceModel = 16;
    string senderDeviceOs = 17;
    string senderId = 18;
    string serverTimeStamp = 19;
    string stateMassage = 20;
    string compMacAddress = 21;
}

// The response message containing the greetings
message SmartDeviceStatus {
    bool onOffState = 4;
}

// Did the commend succeeded (true) or not (false)
message CommendStatus {
    bool success = 5;
}

message SmartDeviceUpdateDetails  {
    SmartDevice smartDevice = 6;
    string newName = 7;
}

message FirebaseAccountInformation  {
    string fireBaseProjectId = 8;
    string fireBaseApiKey = 9;
    string userEmail = 10;
    string userPassword = 11;
    string homeId = 12;
}